CREATE TABLE users_cumulated(
	user_id TEXT,
	-- list of the dates in the past where the user was active
	dates_active DATE[],
	-- the current date for the user
	date DATE,
	PRIMARY KEY (user_id, date)
)


SELECT 
	MIN(event_time),
	MAX(event_time)	
FROM events;

SELECT * FROM events;
DROP TABLE users_cumulated


INSERT INTO users_cumulated
WITH yesterday AS (
	SELECT * 
	FROM users_cumulated
	WHERE date = Date('2023-01-30')
	
), today AS (
	SELECT 
		CAST(user_id AS TEXT) as user_id,
		DATE(CAST(event_time AS TIMESTAMP)) AS date_active	
	FROM events
	WHERE 
		DATE(CAST(event_time AS TIMESTAMP)) = Date('2023-01-31')
		AND user_Id IS NOT NULL
	GROUP BY user_id, DATE(CAST(event_time AS TIMESTAMP))	
)

SELECT 
	COALESCE(T.user_id, y.user_id) AS user_id,
	CASE WHEN y.dates_active is NULL
		THEN ARRAY[t.date_active]
		WHEN t.date_active IS NULL
		THEN y.dates_active
		ELSE ARRAY[t.date_active] || y.dates_active
		END AS dates_active,
	COALESCE(t.date_active, y.date + INTERVAL '1 day') AS date
	
FROM today t FULL OUTER JOIN yesterday y
ON t.user_id = y.user_id



WITH users AS (
	SELECT 
		* 
	FROM users_cumulated
	WHERE date = DATE('2023-01-31')
), series AS (
	SELECT 
		* 
	FROM generate_series(DATE('2023-01-02'), DATE('2023-01-31'), INTERVAL '1 day') as series_date
), place_holder_ints AS (
	SELECT 
		CASE WHEN 
			dates_active @> ARRAY [DATE(series_date)]
		THEN CAST(POW(2, 32 - (date - DATE(series_date))) AS BIGINT)
		ELSE 0
		END AS placeholder_int_value,
		* 
	FROM users CROSS JOIN series 
	-- WHERE user_id ='13431269135311700000'
)

SELECT 
	user_id,
	CAST(CAST(SUM(placeholder_int_value) AS BIGINT) AS BIT(32)),
	BIT_COUNT(CAST(CAST(SUM(placeholder_int_value) AS BIGINT) AS BIT(32))) > 0 as mounthly_active
FROM place_holder_ints
	GROUP BY user_id;

